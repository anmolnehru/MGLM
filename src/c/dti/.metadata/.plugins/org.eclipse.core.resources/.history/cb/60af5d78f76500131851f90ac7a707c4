//============================================================================
// Name        : legr_core.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================
#include <iostream>
#include <armadillo>
#define DIM_DTI 6

using namespace std;
using namespace arma;

int main(int argc, char** argv)
{

	// Let's consider binary file read and write later
	mat X;

	X.load("X_arma.mat",raw_ascii);
	cout << "X" << endl;
	cout << X << endl;

    mat Ys;
    Ys.load("Ys_arma.mat",raw_ascii);
    cout << "Ys"<< endl;
    cout << Ys << endl;

    imat idx_dti;
    idx_dti.load("idx_dti_test_int_arma.mat",raw_ascii);
    cout <<"IDX DTI" <<endl;
    cout << idx_dti << endl;

    imat mask_job;
    mask_job.load("mask_job_arma.mat",raw_ascii);
    cout << "mask_job"<< endl;
    cout << mask_job << endl;

    cout  << "mask_job.n_rows" <<endl;
    cout  << mask_job.n_rows <<endl;

    int nvoxels = mask_job.n_rows;
    int nsubjects = Ys.n_cols;
    cout << "nsubjects" << endl;
    cout << nsubjects <<endl;


    // Extract one voxel and reshape
    cube Y(3,3,nsubjects);
    int isubj=0;
    for(isubj=0; isubj < nsubjects; isubj++){
    	Y(0,0,isubj) = Ys(startrow,isubj);
		Y(0,1,isubj) = Ys(startrow+1,isubj);
		Y(0,2,isubj) = Ys(startrow+2,isubj)
		Ys(startrow+3,isubj)
		Ys(startrow+4,isubj)
		Ys(startrow+5,isubj)

    }






  return 0;
}
